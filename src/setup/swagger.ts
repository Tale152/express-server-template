import { Application } from 'express';
import swaggerUi from 'swagger-ui-express';
import fs from 'fs';
import path from 'path';

/**
 * Sets up Swagger UI documentation for the Express application.
 * 
 * Configures interactive API documentation using Swagger UI based on the
 * OpenAPI specification generated by TSOA. If the swagger.json file exists,
 * serves the full interactive documentation. Otherwise, provides a fallback
 * message with instructions to generate the specification.
 * 
 * Features:
 * - Interactive API documentation at /docs endpoint
 * - Custom styling (removes top bar)
 * - Fallback handling when specification is missing
 * - Explorer mode for better navigation
 * 
 * @param app - Express application instance
 */
export function setupSwaggerUi(app: Application): void {
  const swaggerSpecPath = path.join(process.cwd(), 'public', 'swagger.json');
  
  // Check if swagger spec exists
  if (fs.existsSync(swaggerSpecPath)) {
    const swaggerDocument = JSON.parse(fs.readFileSync(swaggerSpecPath, 'utf8'));
    
    const options = {
      explorer: true,
      customCss: '.swagger-ui .topbar { display: none }',
      customSiteTitle: 'Todo App API Documentation',
    };

    app.use('/docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument, options));
  } else {
    // Serve a simple message if swagger spec is not available
    app.get('/docs', (_req, res) => {
      res.send(`
        <html>
          <head><title>API Documentation</title></head>
          <body>
            <h1>API Documentation</h1>
            <p>Swagger specification not found.</p>
            <p>Run <code>npm run build</code> to generate the API documentation.</p>
          </body>
        </html>
      `);
    });
  }
}
